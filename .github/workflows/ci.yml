name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test all services
  test-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service, user-service, session-service]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: services/${{ matrix.service }}/package-lock.json
    
    - name: Install dependencies
      run: |
        cd services/${{ matrix.service }}
        npm ci
    
    - name: Run tests
      run: |
        cd services/${{ matrix.service }}
        npm test
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: services/${{ matrix.service }}/coverage/lcov.info
        flags: ${{ matrix.service }}
        name: ${{ matrix.service }}-coverage

  # Test frontend
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run unit tests
      run: |
        cd frontend
        npm run test:unit
    
    - name: Run integration tests
      run: |
        cd frontend
        npm run test:integration
    
    - name: Run performance tests
      run: |
        cd frontend
        npm run test:performance
    
    - name: Generate coverage report
      run: |
        cd frontend
        npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  # Build application
  build:
    runs-on: ubuntu-latest
    needs: [test-services, test-frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install shared dependencies
      run: |
        cd shared
        npm ci
        npm run build
    
    - name: Build services
      run: |
        for service in auth-service user-service session-service; do
          cd services/$service
          npm ci
          npm run build
          cd ../..
        done
    
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          services/*/dist/
          frontend/dist/
          shared/dist/

  # Security scan
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        for service in auth-service user-service session-service; do
          cd services/$service
          npm audit --audit-level=moderate
          cd ../..
        done
        cd frontend
        npm audit --audit-level=moderate

  # Docker build
  docker-build:
    runs-on: ubuntu-latest
    needs: [test-services, test-frontend, build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: user-management-system:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 