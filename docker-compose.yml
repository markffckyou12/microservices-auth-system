version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_DB: auth_system
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/user-service/migrations:/docker-entrypoint-initdb.d
    networks:
      - auth-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: auth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auth-network

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: auth-service
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://auth_user:auth_password@postgres:5432/auth_system
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OAUTH_GOOGLE_CLIENT_ID: your-google-client-id
      OAUTH_GOOGLE_CLIENT_SECRET: your-google-client-secret
      OAUTH_GITHUB_CLIENT_ID: your-github-client-id
      OAUTH_GITHUB_CLIENT_SECRET: your-github-client-secret
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - auth-network
    volumes:
      - ./services/auth-service:/app/services/auth-service
      - /app/services/auth-service/node_modules

  # User Service
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: user-service
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgresql://auth_user:auth_password@postgres:5432/auth_system
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - redis
    networks:
      - auth-network
    volumes:
      - ./services/user-service:/app/services/user-service
      - /app/services/user-service/node_modules

  # Session Service
  session-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: session-service
    environment:
      NODE_ENV: development
      PORT: 3002
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "3002:3002"
    depends_on:
      - redis
    networks:
      - auth-network
    volumes:
      - ./services/session-service:/app/services/session-service
      - /app/services/session-service/node_modules

  # API Gateway (Optional - for production)
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: api-gateway
    environment:
      NODE_ENV: development
      PORT: 3000
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3003
      SESSION_SERVICE_URL: http://session-service:3002
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - user-service
      - session-service
    networks:
      - auth-network

volumes:
  postgres_data:
  redis_data:

networks:
  auth-network:
    driver: bridge 