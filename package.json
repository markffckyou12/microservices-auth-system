{
  "name": "user-management-system",
  "version": "1.0.0",
  "description": "Comprehensive User Management System with Microservices Architecture",
  "private": true,
  "workspaces": [
    "shared",
    "services/*",
    "frontend"
  ],
  "scripts": {
    "setup:devcontainer": "npm run setup:all",
    "setup:all": "npm run install:all && npm run build:shared && npm run migrate:all",
    "install:all": "npm install && npm run install:services && npm run install:frontend",
    "install:services": "cd shared && npm install && cd ../services/auth-service && npm install && cd ../user-service && npm install && cd ../session-service && npm install",
    "install:frontend": "cd frontend && npm install",
    "build:shared": "cd shared && npm run build",
    "build:all": "npm run build:shared && npm run build:services && npm run build:frontend",
    "build:services": "cd services/auth-service && npm run build && cd ../user-service && npm run build && cd ../session-service && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "dev": "concurrently \"npm run dev:services\" \"npm run dev:frontend\"",
    "dev:services": "concurrently \"npm run dev:auth\" \"npm run dev:user\" \"npm run dev:session\"",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:user": "cd services/user-service && npm run dev",
    "dev:session": "cd services/session-service && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "test": "npm run test:services && npm run test:frontend",
    "test:services": "cd services/auth-service && npm test && cd ../user-service && npm test && cd ../session-service && npm test",
    "test:frontend": "cd frontend && npm run test:unit && npm run test:integration",
    "test:coverage": "npm run test:coverage:services && npm run test:coverage:frontend",
    "test:coverage:services": "cd services/auth-service && npm run test:coverage && cd ../user-service && npm run test:coverage && cd ../session-service && npm run test:coverage",
    "test:coverage:frontend": "cd frontend && npm run test:coverage",
    "migrate:all": "npm run migrate:auth && npm run migrate:user",
    "migrate:auth": "cd services/auth-service && npm run migrate",
    "migrate:user": "cd services/user-service && npm run migrate",
    "seed:all": "npm run seed:auth && npm run seed:user",
    "seed:auth": "cd services/auth-service && npm run seed",
    "seed:user": "cd services/user-service && npm run seed",
    "docker:build": "docker-compose -f docker-compose.yml build",
    "docker:up": "docker-compose -f docker-compose.yml up -d",
    "docker:down": "docker-compose -f docker-compose.yml down",
    "docker:logs": "docker-compose -f docker-compose.yml logs -f",
    "clean": "npm run clean:node_modules && npm run clean:dist && npm run clean:coverage",
    "clean:node_modules": "rimraf node_modules services/*/node_modules frontend/node_modules shared/node_modules",
    "clean:dist": "rimraf dist services/*/dist frontend/dist shared/dist",
    "clean:coverage": "rimraf coverage services/*/coverage frontend/coverage",
    "lint": "npm run lint:services && npm run lint:frontend",
    "lint:services": "cd services/auth-service && npm run lint && cd ../user-service && npm run lint && cd ../session-service && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:fix": "npm run lint:fix:services && npm run lint:fix:frontend",
    "lint:fix:services": "cd services/auth-service && npm run lint:fix && cd ../user-service && npm run lint:fix && cd ../session-service && npm run lint:fix",
    "lint:fix:frontend": "cd frontend && npm run lint:fix",
    "format": "prettier --write \"**/*.{js,ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,tsx,json,md}\"",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "docs": "npm run docs:generate && npm run docs:serve",
    "docs:generate": "typedoc --out docs src",
    "docs:serve": "npx http-server docs -p 8080",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@types/node": "^18.0.0",
    "concurrently": "^8.0.0",
    "cross-env": "^7.0.3",
    "husky": "^8.0.0",
    "prettier": "^3.0.0",
    "rimraf": "^5.0.0",
    "typescript": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/user-management-system.git"
  },
  "keywords": [
    "user-management",
    "microservices",
    "typescript",
    "react",
    "nodejs",
    "postgresql",
    "redis"
  ],
  "author": "Your Name",
  "license": "MIT"
} 