export declare const API_VERSION = "1.0.0";
export declare const API_BASE_PATH = "/api/v1";
export declare const HTTP_STATUS: {
    readonly OK: 200;
    readonly CREATED: 201;
    readonly NO_CONTENT: 204;
    readonly BAD_REQUEST: 400;
    readonly UNAUTHORIZED: 401;
    readonly FORBIDDEN: 403;
    readonly NOT_FOUND: 404;
    readonly CONFLICT: 409;
    readonly UNPROCESSABLE_ENTITY: 422;
    readonly TOO_MANY_REQUESTS: 429;
    readonly INTERNAL_SERVER_ERROR: 500;
    readonly SERVICE_UNAVAILABLE: 503;
};
export declare const AUTH_CONSTANTS: {
    readonly JWT_EXPIRES_IN: "24h";
    readonly REFRESH_TOKEN_EXPIRES_IN: "7d";
    readonly PASSWORD_MIN_LENGTH: 8;
    readonly PASSWORD_MAX_LENGTH: 128;
    readonly USERNAME_MIN_LENGTH: 3;
    readonly USERNAME_MAX_LENGTH: 30;
    readonly EMAIL_MAX_LENGTH: 255;
    readonly NAME_MAX_LENGTH: 50;
    readonly SESSION_EXPIRES_IN: "30d";
    readonly MFA_BACKUP_CODES_COUNT: 8;
    readonly MFA_BACKUP_CODE_LENGTH: 8;
    readonly TOTP_DIGITS: 6;
    readonly TOTP_PERIOD: 30;
    readonly TOTP_WINDOW: 2;
};
export declare const RATE_LIMIT: {
    readonly LOGIN_WINDOW_MS: number;
    readonly LOGIN_MAX_REQUESTS: 5;
    readonly REGISTER_WINDOW_MS: number;
    readonly REGISTER_MAX_REQUESTS: 3;
    readonly PASSWORD_RESET_WINDOW_MS: number;
    readonly PASSWORD_RESET_MAX_REQUESTS: 3;
    readonly API_WINDOW_MS: number;
    readonly API_MAX_REQUESTS: 100;
};
export declare const DB_CONSTANTS: {
    readonly MAX_CONNECTIONS: 20;
    readonly MIN_CONNECTIONS: 2;
    readonly IDLE_TIMEOUT: 30000;
    readonly CONNECTION_TIMEOUT: 10000;
    readonly QUERY_TIMEOUT: 30000;
};
export declare const REDIS_CONSTANTS: {
    readonly SESSION_PREFIX: "session:";
    readonly RATE_LIMIT_PREFIX: "rate_limit:";
    readonly MFA_PREFIX: "mfa:";
    readonly REFRESH_TOKEN_PREFIX: "refresh_token:";
    readonly USER_PREFIX: "user:";
    readonly DEFAULT_TTL: 3600;
    readonly SESSION_TTL: 2592000;
    readonly RATE_LIMIT_TTL: 900;
    readonly MFA_TTL: 300;
};
export declare const SECURITY_CONSTANTS: {
    readonly BCRYPT_ROUNDS: 12;
    readonly JWT_ALGORITHM: "HS256";
    readonly CORS_ORIGINS: readonly ["http://localhost:3000", "http://localhost:3001"];
    readonly CORS_METHODS: readonly ["GET", "POST", "PUT", "DELETE", "PATCH"];
    readonly CORS_HEADERS: readonly ["Content-Type", "Authorization"];
    readonly SECURE_COOKIES: false;
    readonly HTTP_ONLY_COOKIES: true;
    readonly SAME_SITE_COOKIES: "lax";
};
export declare const ERROR_CODES: {
    readonly INVALID_CREDENTIALS: "AUTH_001";
    readonly USER_NOT_FOUND: "AUTH_002";
    readonly ACCOUNT_LOCKED: "AUTH_003";
    readonly ACCOUNT_DISABLED: "AUTH_004";
    readonly TOKEN_EXPIRED: "AUTH_005";
    readonly TOKEN_INVALID: "AUTH_006";
    readonly TOKEN_MISSING: "AUTH_007";
    readonly REFRESH_TOKEN_INVALID: "AUTH_008";
    readonly REFRESH_TOKEN_EXPIRED: "AUTH_009";
    readonly PASSWORD_TOO_WEAK: "AUTH_010";
    readonly EMAIL_ALREADY_EXISTS: "AUTH_011";
    readonly USERNAME_ALREADY_EXISTS: "AUTH_012";
    readonly MFA_REQUIRED: "MFA_001";
    readonly MFA_CODE_INVALID: "MFA_002";
    readonly MFA_CODE_EXPIRED: "MFA_003";
    readonly MFA_ALREADY_ENABLED: "MFA_004";
    readonly MFA_NOT_ENABLED: "MFA_005";
    readonly MFA_SETUP_REQUIRED: "MFA_006";
    readonly OAUTH_PROVIDER_NOT_SUPPORTED: "OAUTH_001";
    readonly OAUTH_CODE_INVALID: "OAUTH_002";
    readonly OAUTH_STATE_MISMATCH: "OAUTH_003";
    readonly OAUTH_EMAIL_MISMATCH: "OAUTH_004";
    readonly SESSION_NOT_FOUND: "SESSION_001";
    readonly SESSION_EXPIRED: "SESSION_002";
    readonly SESSION_INVALID: "SESSION_003";
    readonly TOO_MANY_SESSIONS: "SESSION_004";
    readonly VALIDATION_ERROR: "VAL_001";
    readonly REQUIRED_FIELD_MISSING: "VAL_002";
    readonly INVALID_EMAIL_FORMAT: "VAL_003";
    readonly INVALID_PASSWORD_FORMAT: "VAL_004";
    readonly INVALID_USERNAME_FORMAT: "VAL_005";
    readonly RATE_LIMIT_EXCEEDED: "RATE_001";
    readonly DATABASE_CONNECTION_ERROR: "DB_001";
    readonly DATABASE_QUERY_ERROR: "DB_002";
    readonly DATABASE_TRANSACTION_ERROR: "DB_003";
    readonly REDIS_CONNECTION_ERROR: "REDIS_001";
    readonly REDIS_OPERATION_ERROR: "REDIS_002";
    readonly SERVICE_UNAVAILABLE: "SVC_001";
    readonly SERVICE_TIMEOUT: "SVC_002";
    readonly SERVICE_COMMUNICATION_ERROR: "SVC_003";
    readonly INTERNAL_SERVER_ERROR: "GEN_001";
    readonly NOT_FOUND: "GEN_002";
    readonly UNAUTHORIZED: "GEN_003";
    readonly FORBIDDEN: "GEN_004";
    readonly BAD_REQUEST: "GEN_005";
};
export declare const EVENT_TYPES: {
    readonly USER_REGISTERED: "user.registered";
    readonly USER_LOGIN: "user.login";
    readonly USER_LOGOUT: "user.logout";
    readonly USER_UPDATED: "user.updated";
    readonly USER_DELETED: "user.deleted";
    readonly USER_PASSWORD_CHANGED: "user.password_changed";
    readonly USER_PASSWORD_RESET: "user.password_reset";
    readonly USER_EMAIL_VERIFIED: "user.email_verified";
    readonly MFA_ENABLED: "mfa.enabled";
    readonly MFA_DISABLED: "mfa.disabled";
    readonly MFA_VERIFIED: "mfa.verified";
    readonly MFA_FAILED: "mfa.failed";
    readonly OAUTH_LOGIN: "oauth.login";
    readonly OAUTH_LINKED: "oauth.linked";
    readonly OAUTH_UNLINKED: "oauth.unlinked";
    readonly SESSION_CREATED: "session.created";
    readonly SESSION_DESTROYED: "session.destroyed";
    readonly SESSION_REFRESHED: "session.refreshed";
    readonly ACCOUNT_LOCKED: "security.account_locked";
    readonly ACCOUNT_UNLOCKED: "security.account_unlocked";
    readonly SUSPICIOUS_ACTIVITY: "security.suspicious_activity";
    readonly RATE_LIMIT_EXCEEDED: "security.rate_limit_exceeded";
};
export declare const ENV: {
    readonly DEVELOPMENT: "development";
    readonly PRODUCTION: "production";
    readonly TEST: "test";
    readonly STAGING: "staging";
};
export declare const SERVICE_NAMES: {
    readonly AUTH_SERVICE: "auth-service";
    readonly USER_SERVICE: "user-service";
    readonly SESSION_SERVICE: "session-service";
    readonly FRONTEND: "frontend";
};
export declare const HEALTH_CHECK: {
    readonly TIMEOUT: 5000;
    readonly INTERVAL: 30000;
    readonly RETRY_ATTEMPTS: 3;
    readonly DEGRADED_THRESHOLD: 1000;
};
export declare const LOG_LEVELS: {
    readonly ERROR: "error";
    readonly WARN: "warn";
    readonly INFO: "info";
    readonly DEBUG: "debug";
};
export declare const PAGINATION: {
    readonly DEFAULT_PAGE: 1;
    readonly DEFAULT_LIMIT: 10;
    readonly MAX_LIMIT: 100;
    readonly MIN_LIMIT: 1;
};
//# sourceMappingURL=index.d.ts.map